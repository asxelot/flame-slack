function router(e,n){e.state("login",{url:"/login",controller:"LoginCtrl",templateUrl:"views/login.html",resolve:{isLogged:["Auth",function(e){return e.$waitForAuth()}]}}).state("register",{url:"/register",controller:"RegisterCtrl",templateUrl:"views/register.html",resolve:{usernames:["Usernames",function(e){return e.$loaded()}],isLogged:["Auth",function(e){return e.$waitForAuth()}]}}).state("messages",{controller:"MessagesCtrl",url:"/messages",templateUrl:"views/messages.html",resolve:{isLogged:["Auth",function(e){return e.$waitForAuth()}],channels:["Channels",function(e){return e.$loaded()}]}}).state("messages.user",{url:"/@:user",controller:"DirectCtrl",templateUrl:"views/chat.html",resolve:{usernames:["Usernames",function(e){return e.$loaded()}]}}).state("messages.channel",{url:"/:channel",controller:"ChannelCtrl",templateUrl:"views/chat.html"}),n.otherwise("/messages/general")}function interceptor(e){e.interceptors.push(["$q","$rootScope",function(e,n){function t(t){return console.error(t),n.errors.push(t.data),e.reject(t)}return n.errors=[],{requestError:t,responseError:t}}])}function ngAutoscroll(){function e(e,n){function t(){i&&(r.scrollTop=r.scrollHeight)}var r=n[0],i=!0,s="webkitfullscreenchange mozfullscreenchange fullscreenchange";n.on("DOMSubtreeModified",t),angular.element(document).on(s,t),n.on("scroll",function(){i=r.scrollTop==r.scrollHeight-r.offsetHeight}),e.$on("dividerTop",function(e,n){r.scrollTop=n})}return{link:e}}function ngFocus(){function e(e,n){n[0].focus()}return{link:e}}function divider(){function e(e,n){angular.element(document.getElementById("chat")).one("DOMSubtreeModified",function(){e.$emit("dividerTop",n[0].offsetTop-150)})}return{link:e}}function ngTabActive(e,n,t){function r(){angular.element(e).on("focus",function(){n.isTabActive=!0,n.$broadcast("tab-active",!0)}).on("blur",function(){n.isTabActive=!1,n.$broadcast("tab-active",!1)})}return{link:r}}function uniqueUsername(){function e(e,n,t,r){r.$validators.uniqueUsername=function(n){return!e.usernames.hasOwnProperty(n)}}return{require:"ngModel",link:e}}function ngEnter(){function e(e,n){n.on("input",function(){n.css("height",n[0].scrollHeight+2+"px")}),n.on("keydown",function(t){13!=t.keyCode||t.shiftKey||(e.ngEnter(),n.css("height","34px"),t.preventDefault())})}return{scope:{ngEnter:"&"},link:e}}function escape(){return function(e){return(e||"").replace(/</g,"&lt;")}}function code(){return function(e){return(e||"").replace(/```([^`]+)```/g,"<pre>$1</pre>").replace(/`([^`]+)`/g,"<code>$1</code>")}}function quote(){return function(e){return(e||"").replace(/^>([^\n]+)$\n?/gm,"<blockquote>$1</blockquote>")}}function link(e){var n=/(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})\/([\/\w\.\-=?]*)*\/?/gi,t=/\.(jpg|jpeg|png|gif)/,r=/(https?:\/\/)(www\.)?youtu\.?be(\.com)?\/(watch\?v=)?([\w\-_]+)(\?t=)?(\w+)?/i,i=/https?:\/\/vimeo\.com\/(\d+)/i;return function(s,a){return(s||"").replace(n,function(n,s){var o='<a href="'+(s?"":"http://")+n+'" target="_blank">'+n+"</a>";if(t.test(n)&&!a.image&&(a.image={src:n}),r.test(n)&&!a.youtube&&(a.youtube={id:n.match(r)[5]}),i.test(n)&&!a.vimeo){var c=n.match(i)[1];a.vimeo={id:c},e.jsonp("https://vimeo.com/api/v2/video/"+c+".json?callback=JSON_CALLBACK").success(function(e){a.vimeo.preview=e[0].thumbnail_large})}return o})}}function username(){return function(e,n){var t=n.users.map(function(e){return e.username});return(e||"").replace(/@(\w+)/,function(e,r){var i=n.user.username==r;return~t.indexOf(r)?(i&&n.$emmit("mention"),'<a href="#/messages/'+r+'"'+(i?'class="mention"':"")+">"+e+"</a>"):e})}}function channel(){return function(e,n){return(e||"").replace(/#(\w+)/gi,function(e,t){return n.channels.hasOwnProperty(t)?'<a href="#/messages/'+t+'">'+e+"</a>":e})}}function trustAsHtml(e){return e.trustAsHtml}function trustAsResourceUrl(e){return e.trustAsResourceUrl}function ChannelCtrl(e,n,t,r,i,s){return t.params.channel&&r.hasOwnProperty(t.params.channel)?(n.msg={},e.directWith=null,e.channel=t.params.channel,n.divider=n.user.lastReaded&&n.user.lastReaded[n.channel],s.set(n.channel),n.addMessage=function(){n.msgForm.$invalid||(n.msg.channel=n.channel,n.msg.timestamp=Firebase.ServerValue.TIMESTAMP,n.msg.author={id:n.user.$id,username:n.user.username,avatar:n.user.avatar},n.messages[n.channel].$add(n.msg),n.msg={})},n.remove=function(e){n.messages[n.channel].$remove(e)},n.$watchCollection("messages."+n.channel,function(e){n.user.lastReaded=n.user.lastReaded||{},n.user.lastReaded[n.channel]=e.length&&e[e.length-1].$id,n.user.$save()}),void n.$on("mention",function(){n.isTabActive||s.add("! ")})):t.go("messages.channel",{channel:"general"})}function DirectCtrl(e,n,t,r,i,s){return r.hasOwnProperty(t.params.user)?(e.msg={},n.channel=null,n.directWith={$id:r[t.params.user],username:t.params.user},e.messages=i.messages(e.user.$id,e.directWith.$id),s.set("@"+e.directWith.username),s.remove(),i.removeNotifications(e.user.$id,e.directWith.$id),e.addMessage=function(){e.msgForm.$invalid||(e.msg.timestamp=Firebase.ServerValue.TIMESTAMP,e.msg.author={id:e.user.$id,username:e.user.username,avatar:e.user.avatar},e.messages.$add(e.msg),i.notify(e.user.$id,e.directWith.$id),e.msg={})},e.remove=function(n){e.messages.$remove(n)},void e.$watchCollection("messages",function(){e.directNotify.$ref().child(e.directWith.$id).remove()})):console.log("user not found")}function LoginCtrl(e,n,t,r,i,s){return e.newUser={},s?t.go("messages.channel"):void(e.login=function(){n.isLoadingHidden=!1,r.$authWithPassword(e.newUser).then(function(e){i.setOnline(e.uid),t.go("messages.channel")})["catch"](console.error)})}function MainCtrl(e,n,t,r,i,s){n.isTabActive=!0,r.$onAuth(function(e){e?(n.user=i.getProfile(e.uid),i.setOnline(e.uid),n.isAdmin=i.isAdmin(e.uid)):(n.user=null,t.go("login"))}),e.lightbox=function(n){e.lightboxSrc=n},e.$on("$stateChangeSuccess",function(){n.isLoadingHidden=!0})}function MessagesCtrl(e,n,t,r,i,s,a,o,c,l){return c?(n.is("messages")&&n.go("messages.channel"),e.messages={},e.users=i.all,e.channels=l,e.directNotify=a.notifications(e.user.$id),e.createChannel=function(){e.newChannelForm.$invalid||(e.channels[e.newChannelName]=!0,e.channels.$save(),e.messages[e.newChannelName]=r(e.newChannelName),e.newChannelName="",e.isNewChannelFormShowed=!1)},e.logout=function(){i.setOffline(e.user.$id),t.$unauth()},e.channels.$ref().on("child_added",function(n){e.messages[n.key()]=r(n.key())}),angular.forEach(e.messages,function(n){n.$ref().on("child_added",function(){e.isTabActive||s.add("* ")})}),e.directNotify.$ref().on("child_added",function(e){s.add("! ")}),void e.$on("tab-active",function(e,n){n&&s.remove()})):n.go("login")}function RegisterCtrl(e,n,t,r,i,s,a){return e.usernames=s,e.newUser={},a?t.go("messages.channel"):void(e.register=function(){if(!e.RegisterForm.$invalid){if(e.usernames[e.newUser.username])return console.log("this username already exists");n.isLoadingHidden=!1,r.$createUser(e.newUser).then(function(n){return r.$authWithPassword(e.newUser)}).then(function(n){i.setOnline(n.uid);var r=i.getProfile(n.uid);e.usernames[e.newUser.username]=n.uid,e.usernames.$save(),r.username=e.newUser.username,r.avatar=n.password.profileImageURL,r.$save(),i.all.$save(),t.go("messages.channel")})}})}angular.module("FlameSlackApp",["ui.router","firebase","ngSanitize"]).constant("FB","https://flame-slack.firebaseio.com/").config(router).config(interceptor),router.$inject=["$stateProvider","$urlRouterProvider"],interceptor.$inject=["$httpProvider"],angular.module("FlameSlackApp").directive("ngAutoscroll",ngAutoscroll).directive("divider",divider).directive("ngTabActive",ngTabActive).directive("uniqueUsername",uniqueUsername).directive("ngEnter",ngEnter).directive("ngFocus",ngFocus),ngTabActive.$inject=["$window","$rootScope","Title"],angular.module("FlameSlackApp").factory("Auth",["$firebaseAuth","FB",function(e,n){return e(new Firebase(n))}]).factory("Users",["$firebaseArray","$firebaseObject","FB",function(e,n,t){var r=new Firebase(t+"users"),i=new Firebase(t+".info/connected"),s=e(r);return{getProfile:function(e){return n(r.child(e))},setOnline:function(t){var s=n(i);online=e(r.child(t+"/online")),s.$watch(function(){s.$value===!0&&online.$add(!0).then(function(){online.$ref().onDisconnect().remove()})}),r.child(t+"/lastOnline").onDisconnect().set(Firebase.ServerValue.TIMESTAMP)},setOffline:function(e){r.child(e+"/online").remove(),r.child(e+"/lastOnline").set(Firebase.ServerValue.TIMESTAMP)},isAdmin:function(e){return n(new Firebase(t).child("admins").child(e))},all:s}}]).factory("Usernames",["$firebaseObject","FB",function(e,n){return e(new Firebase(n+"usernames"))}]).factory("Channels",["$firebaseObject","FB",function(e,n){return e(new Firebase(n+"channels"))}]).factory("Messages",["$firebaseArray","FB",function(e,n){var t=new Firebase(n+"messages");return function(n){return e(t.child(n))}}]).factory("Direct",["$firebaseArray","$firebaseObject","FB",function(e,n,t){return{messages:function(n,r){var i=r>n?n+"/"+r:r+"/"+n;return e(new Firebase(t).child("direct").child(i))},notify:function(e,n){var r=new Firebase(t+"directNotification").child(n).child(e);r.transaction(function(e){return(e||0)+1})},notifications:function(e){return n(new Firebase(t+"directNotification").child(e))},removeNotifications:function(e,n){new Firebase(t+"directNotification").child(e).child(n).remove()}}}]).factory("Title",["$rootScope","FB",function(e,n){var t={set:function(n){e.title=n+" | Flame Slack"},add:function(n){~e.title.indexOf(n)||(e.title=n+e.title)},remove:function(n){n?~e.title.indexOf(n)&&(e.title=(e.title||"").replace(n,"")):e.title=(e.title||"").replace(/[\!\*] /g,"")}};return t}]),angular.module("FlameSlackApp").filter("escape",escape).filter("code",code).filter("quote",quote).filter("link",link).filter("username",username).filter("channel",channel).filter("trustAsHtml",trustAsHtml).filter("trustAsResourceUrl",trustAsResourceUrl),link.$inject=["$http"],trustAsHtml.$inject=["$sce"],trustAsResourceUrl.$inject=["$sce"],angular.module("FlameSlackApp").controller("ChannelCtrl",ChannelCtrl),ChannelCtrl.$inject=["$rootScope","$scope","$state","channels","Messages","Title"],angular.module("FlameSlackApp").controller("DirectCtrl",DirectCtrl),DirectCtrl.$inject=["$scope","$rootScope","$state","usernames","Direct","Title"],angular.module("FlameSlackApp").controller("LoginCtrl",LoginCtrl),LoginCtrl.$inject=["$scope","$rootScope","$state","Auth","Users","isLogged"],angular.module("FlameSlackApp").controller("MainCtrl",MainCtrl),MainCtrl.$inject=["$scope","$rootScope","$state","Auth","Users","Usernames"],angular.module("FlameSlackApp").controller("MessagesCtrl",MessagesCtrl),MessagesCtrl.$inject=["$scope","$state","Auth","Messages","Users","Title","Direct","FB","isLogged","channels"],angular.module("FlameSlackApp").controller("RegisterCtrl",RegisterCtrl),RegisterCtrl.$inject=["$scope","$rootScope","$state","Auth","Users","usernames","isLogged"];
//# sourceMappingURL=data:application/json;base64,
