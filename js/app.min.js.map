{"version":3,"sources":["app.js","controllers/channel.ctrl.js","controllers/direct.ctrl.js","controllers/login.ctrl.js","controllers/main.ctrl.js","controllers/messages.ctrl.js","controllers/register.ctrl.js","app.min.js","directives.js","factories.js","filters.js"],"names":["router","$stateProvider","$urlRouterProvider","state","url","controller","templateUrl","resolve","isLogged","Auth","$waitForAuth","usernames","Usernames","$loaded","channels","Channels","otherwise","ChannelCtrl","$rootScope","$scope","$state","Messages","Title","params","channel","hasOwnProperty","msg","directWith","divider","user","lastReaded","set","addMessage","msgForm","$invalid","timestamp","Firebase","ServerValue","TIMESTAMP","author","id","$id","username","avatar","messages","$add","remove","$remove","$watchCollection","msgs","length","$save","$on","isTabActive","add","go","DirectCtrl","Users","Direct","FB","removeNotifications","text","notify","directNotify","$ref","child","console","log","LoginCtrl","newUser","login","isLoadingHidden","$authWithPassword","then","authData","setOnline","uid","error","MainCtrl","$onAuth","getProfile","isAdmin","MessagesCtrl","is","users","all","notifications","createChannel","newChannelForm","newChannelName","isNewChannelFormShowed","lightbox","src","lightboxSrc","logout","setOffline","$unauth","on","snap","key","e","active","RegisterCtrl","register","RegisterForm","$createUser","profile","password","profileImageURL","angular","module","constant","config","$inject","directive","link","$el","scrollToBottom","isScrolled","el","scrollTop","scrollHeight","fullscreenchange","element","document","offsetHeight","top","focus","getElementById","one","$emit","offsetTop","$window","$broadcast","$attrs","ngModel","$validators","uniqueUsername","val","require","css","keyCode","shiftKey","ngEnter","preventDefault","scope","factory","$firebaseAuth","$firebaseArray","$firebaseObject","usersRef","connectedRef","connected","online","$watch","$value","onDisconnect","msgRef","uid1","uid2","path","from","to","ref","transaction","title","s","indexOf","replace","filter","$http","linkRegExp","imageRegExp","youtubeRegExp","vimeoRegExp","protocol","html","test","image","youtube","match","vimeo","vimeoId","jsonp","success","data","preview","thumbnail_large","map","currentUser","$emmit","$sce","trustAsHtml","trustAsResourceUrl"],"mappings":"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","file":"app.min.js","sourcesContent":["angular.module('FlameSlackApp', [\r\n    'ui.router', \r\n    'firebase', \r\n    'ngSanitize'  \r\n  ])  \r\n\r\n  .constant('FB', 'https://flame-slack.firebaseio.com/')\r\n\r\n  .config(router)\r\n\r\n\r\nfunction router($stateProvider, $urlRouterProvider) {\r\n  $stateProvider\r\n    .state('login', { \r\n      url: '/login',\r\n      controller: 'LoginCtrl',\r\n      templateUrl: 'views/login.html',\r\n      resolve: {\r\n        isLogged: function(Auth) {\r\n          return Auth.$waitForAuth()\r\n        }\r\n      }\r\n    })\r\n    .state('register', {\r\n      url: '/register',\r\n      controller: 'RegisterCtrl',\r\n      templateUrl: 'views/register.html',\r\n      resolve: {\r\n        usernames: function(Usernames) {\r\n          return Usernames.$loaded()\r\n        },\r\n        isLogged: function(Auth) {\r\n          return Auth.$waitForAuth()\r\n        }\r\n      }\r\n    })\r\n    .state('messages', {\r\n      controller: 'MessagesCtrl',\r\n      url: '/messages',\r\n      templateUrl: 'views/messages.html',\r\n      resolve: {\r\n        isLogged: function(Auth) {\r\n          return Auth.$waitForAuth()\r\n        },\r\n        channels: function(Channels) {\r\n          return Channels.$loaded()\r\n        }\r\n      }\r\n    })\r\n    .state('messages.user', {\r\n      url: '/@:user',\r\n      controller: 'DirectCtrl',\r\n      templateUrl: 'views/chat.html',\r\n      resolve: {\r\n        usernames: function(Usernames) { \r\n          return Usernames.$loaded()\r\n        }\r\n      }\r\n    }) \r\n    .state('messages.channel', {\r\n      url: '/:channel',\r\n      controller: 'ChannelCtrl',\r\n      templateUrl: 'views/chat.html'\r\n    })\r\n\r\n    $urlRouterProvider.otherwise(\"/messages/general\");\r\n}","angular.module('FlameSlackApp')\r\n  .controller('ChannelCtrl', ChannelCtrl)  \r\n\r\n\r\nfunction ChannelCtrl($rootScope, $scope, $state, channels, \r\n                     Messages, Title) {\r\n\r\n  if (!$state.params.channel || !channels.hasOwnProperty($state.params.channel))\r\n    return $state.go('messages.channel', { channel: 'general' }) \r\n  \r\n  $scope.msg = {}\r\n  $rootScope.directWith = null\r\n  $rootScope.channel = $state.params.channel\r\n  $scope.divider = $scope.user.lastReaded && \r\n                   $scope.user.lastReaded[$scope.channel]\r\n  \r\n  Title.set($scope.channel)\r\n\r\n  $scope.addMessage = function() {\r\n    if ($scope.msgForm.$invalid) return \r\n\r\n    $scope.msg.channel = $scope.channel\r\n    $scope.msg.timestamp = Firebase.ServerValue.TIMESTAMP\r\n    $scope.msg.author = {\r\n      id: $scope.user.$id,\r\n      username: $scope.user.username,\r\n      avatar: $scope.user.avatar\r\n    }\r\n\r\n    $scope.messages[$scope.channel].$add($scope.msg)\r\n    $scope.msg = {}\r\n  }\r\n\r\n  $scope.remove = function(msg) {\r\n    $scope.messages[$scope.channel].$remove(msg)\r\n  }\r\n\r\n  // last readed messages\r\n  $scope.$watchCollection('messages.' + $scope.channel, function(msgs) {\r\n    $scope.user.lastReaded = $scope.user.lastReaded || {}\r\n    $scope.user.lastReaded[$scope.channel] = msgs.length && \r\n                                             msgs[msgs.length-1].$id\r\n    $scope.user.$save()\r\n  })\r\n\r\n  // mention\r\n  $scope.$on('mention', function() {\r\n    if (!$scope.isTabActive) Title.add('! ')\r\n  })\r\n}","angular.module('FlameSlackApp')\r\n  .controller('DirectCtrl', DirectCtrl)\r\n\r\n\r\nfunction DirectCtrl($scope, $rootScope, $state, usernames,\r\n                    isLogged, Channels, Users, Direct, Title, FB) {\r\n\r\n  if (!usernames.hasOwnProperty($state.params.user))\r\n    return console.log('user not found')\r\n\r\n  $scope.msg = {}\r\n  $rootScope.channel = null\r\n  $rootScope.directWith = {\r\n    $id: usernames[$state.params.user],\r\n    username: $state.params.user\r\n  }\r\n  $scope.messages = Direct.messages($scope.user.$id, $scope.directWith.$id)\r\n\r\n  Title.set($scope.directWith.username)\r\n  Title.remove()\r\n  Direct.removeNotifications($scope.user.$id, $scope.directWith.$id)\r\n\r\n  $scope.addMessage = function() {\r\n    if (!$scope.msg.text) return \r\n\r\n    $scope.msg.timestamp = Firebase.ServerValue.TIMESTAMP\r\n    $scope.msg.author = {\r\n      id: $scope.user.$id,\r\n      username: $scope.user.username,\r\n      avatar: $scope.user.avatar\r\n    }\r\n\r\n    $scope.messages.$add($scope.msg)\r\n    Direct.notify($scope.user.$id, $scope.directWith.$id)\r\n    $scope.msg = {}\r\n  }\r\n\r\n  $scope.remove = function(msg) {\r\n    $scope.messages.$remove(msg)\r\n  }\r\n\r\n  $scope.$watchCollection('messages', function() {\r\n    $scope.directNotify.$ref().child($scope.directWith.$id).remove()\r\n  })\r\n}","angular.module('FlameSlackApp')\r\n  .controller('LoginCtrl', LoginCtrl)\r\n\r\n\r\nfunction LoginCtrl($scope, $rootScope, $state, Auth, Users, isLogged) {\r\n  $scope.newUser = {}\r\n\r\n  if (isLogged) return $state.go('messages.channel')\r\n\r\n  $scope.login = function() {\r\n    $rootScope.isLoadingHidden = false\r\n\r\n    Auth.$authWithPassword($scope.newUser)\r\n      .then(function(authData) {\r\n        Users.setOnline(authData.uid)\r\n        $state.go('messages.channel')\r\n      })\r\n      .catch(console.error)\r\n  }\r\n}\r\n","angular.module('FlameSlackApp')\r\n  .controller('MainCtrl', MainCtrl)\r\n\r\n\r\nfunction MainCtrl($scope, $rootScope, $state, Auth, Users, Usernames) {\r\n\r\n  Auth.$onAuth(function(authData) {\r\n    if (authData) {\r\n      $rootScope.user = Users.getProfile(authData.uid)\r\n      Users.setOnline(authData.uid)\r\n      $rootScope.isAdmin = Users.isAdmin(authData.uid)\r\n    } else {\r\n      $rootScope.user = null\r\n      $state.go('login')\r\n    }\r\n  })      \r\n\r\n  $scope.$on('$stateChangeSuccess', function() {\r\n    $rootScope.isLoadingHidden = true\r\n  }) \r\n}","angular.module('FlameSlackApp')\r\n  .controller('MessagesCtrl', MessagesCtrl)  \r\n \r\n \r\nfunction MessagesCtrl($scope, $state, Auth, Messages, Users,\r\n                      Title, Direct, FB,isLogged, channels) {\r\n\r\n  if (!isLogged) return $state.go('login')\r\n  if ($state.is('messages')) $state.go('messages.channel')\r\n\r\n  $scope.messages = {}\r\n  $scope.users = Users.all\r\n  $scope.channels = channels\r\n  $scope.directNotify = Direct.notifications($scope.user.$id)    \r\n\r\n  $scope.createChannel = function() {\r\n    if ($scope.newChannelForm.$invalid) return\r\n      \r\n    $scope.channels[$scope.newChannelName] = true\r\n    $scope.channels.$save()\r\n    $scope.messages[$scope.newChannelName] = Messages($scope.newChannelName)\r\n    $scope.newChannelName = ''\r\n    $scope.isNewChannelFormShowed = false\r\n  }\r\n  \r\n  $scope.lightbox = function(src) {\r\n    $scope.lightboxSrc = src\r\n  }\r\n\r\n  $scope.logout = function() {\r\n    Users.setOffline($scope.user.$id)\r\n    Auth.$unauth()\r\n  }   \r\n\r\n  // load messages\r\n  $scope.channels.$ref().on('child_added', function(snap) {\r\n    $scope.messages[snap.key()] = Messages(snap.key())\r\n  }) \r\n\r\n  // new message\r\n  new Firebase(FB + 'messages/').on('child_changed', function() {\r\n    if (!$scope.isTabActive) Title.add('* ')\r\n  }) \r\n\r\n  $scope.directNotify.$ref().on('child_added', function(snap) {\r\n    Title.add('! ')\r\n  })\r\n\r\n  $scope.$on('tab-active', function(e, active) {\r\n    if (active) Title.remove()\r\n  })  \r\n\r\n  $scope.directNotify.$ref().on('child_added', function(snap) {\r\n    Title.add('! ')\r\n  })   \r\n}","angular.module('FlameSlackApp')\r\n  .controller('RegisterCtrl', RegisterCtrl)\r\n\r\n\r\nfunction RegisterCtrl($scope, $rootScope, $state, Auth, Users, \r\n                      usernames, isLogged) {\r\n  $scope.usernames = usernames\r\n  $scope.newUser = {}\r\n  \r\n  if (isLogged) return $state.go('messages.channel')\r\n\r\n  $scope.register = function() {\r\n    if ($scope.RegisterForm.$invalid) return\r\n    if ($scope.usernames[$scope.newUser.username])\r\n      return console.log('this username already exists')\r\n\r\n    $rootScope.isLoadingHidden = false\r\n\r\n    Auth.$createUser($scope.newUser)\r\n      .then(function(authData) {\r\n        return Auth.$authWithPassword($scope.newUser)\r\n      })\r\n      .then(function(authData) {\r\n        Users.setOnline(authData.uid)\r\n        var profile = Users.getProfile(authData.uid)\r\n\r\n        $scope.usernames[$scope.newUser.username] = authData.uid\r\n        $scope.usernames.$save()\r\n        profile.username = $scope.newUser.username\r\n        profile.avatar = authData.password.profileImageURL\r\n        profile.$save()\r\n        Users.all.$save()\r\n        $state.go('messages.channel')\r\n      })\r\n  }\r\n}",null,"angular.module('FlameSlackApp')\r\n\r\n  .directive('ngAutoscroll', function() {\r\n    function link($scope, $el) {\r\n      var el = $el[0],\r\n          isScrolled = true,\r\n          fullscreenchange = 'webkitfullscreenchange mozfullscreenchange fullscreenchange'\r\n\r\n      function scrollToBottom() {\r\n        if (isScrolled) el.scrollTop = el.scrollHeight\r\n      }\r\n\r\n      $el.on('DOMSubtreeModified', scrollToBottom)\r\n\r\n      // chrome scroll fix\r\n      angular.element(document).on(fullscreenchange, scrollToBottom)\r\n\r\n      $el.on('scroll', function() {\r\n        isScrolled = el.scrollTop == el.scrollHeight - el.offsetHeight\r\n      })\r\n\r\n      $scope.$on('dividerTop', function(e, top) {\r\n        el.scrollTop = top\r\n      })\r\n    }\r\n\r\n    return {\r\n      link: link\r\n    }\r\n  })\r\n\r\n  .directive('ngFocus', function() {\r\n    function link($scope, $el) {\r\n      $el[0].focus()\r\n    }\r\n\r\n    return {\r\n      link: link\r\n    }\r\n  })\r\n\r\n  .directive('divider', function() {\r\n    function link($scope, $el) {\r\n      angular.element(document.getElementById('chat'))\r\n        .one('DOMSubtreeModified', function() {\r\n          $scope.$emit('dividerTop', $el[0].offsetTop - 150)\r\n        })\r\n    }\r\n\r\n    return {\r\n      link: link\r\n    }\r\n  })\r\n\r\n  .directive('ngTabActive', function($window, $rootScope,  Title) {\r\n    function link() {\r\n      angular.element($window)\r\n        .on('focus', function() {\r\n          $rootScope.isTabActive = true\r\n          $rootScope.$broadcast('tab-active', true)\r\n        })\r\n        .on('blur', function() {\r\n          $rootScope.isTabActive = false\r\n          $rootScope.$broadcast('tab-active', false)\r\n        })\r\n    }\r\n\r\n    return {\r\n      link: link\r\n    }\r\n  })\r\n\r\n  .directive('uniqueUsername', function() {\r\n    function link($scope, $el, $attrs, ngModel) {\r\n      ngModel.$validators.uniqueUsername = function(val) {\r\n        return !$scope.usernames.hasOwnProperty(val)\r\n      }\r\n    }\r\n\r\n    return {\r\n      require: 'ngModel',\r\n      link: link\r\n    }\r\n  })\r\n\r\n  .directive('ngEnter', function() {\r\n    function link($scope, $el) {\r\n      $el.on('input', function() {\r\n        if ($el[0].offsetHeight < 170) \r\n          $el.css('height', $el[0].scrollHeight + 2 + 'px')\r\n      })\r\n\r\n      $el.on('keydown', function(e) {\r\n        if (e.keyCode == 13 && !e.shiftKey) {\r\n          $scope.ngEnter()\r\n          $el.css('height', '34px')\r\n          e.preventDefault()\r\n        }\r\n      })\r\n    }\r\n\r\n    return {\r\n      scope: {\r\n        ngEnter: '&'\r\n      },\r\n      link: link\r\n    }\r\n  })","angular.module('FlameSlackApp')\r\n\r\n  .factory('Auth', function($firebaseAuth, FB) {\r\n    return $firebaseAuth(new Firebase(FB))\r\n  })\r\n\r\n  .factory('Users', function($firebaseArray, $firebaseObject, FB) {\r\n    var usersRef = new Firebase(FB + 'users'),\r\n        connectedRef = new Firebase(FB + '.info/connected'),\r\n        users = $firebaseArray(usersRef)\r\n\r\n    return {\r\n      getProfile: function(uid) {\r\n        return $firebaseObject(usersRef.child(uid))\r\n      },\r\n      setOnline: function(uid) {\r\n        var connected = $firebaseObject(connectedRef)\r\n            online = $firebaseArray(usersRef.child(uid + '/online'))\r\n\r\n        connected.$watch(function() {\r\n          if (connected.$value === true) {\r\n            online.$add(true).then(function() {\r\n              online.$ref().onDisconnect().remove()\r\n            })\r\n          }\r\n        })\r\n\r\n        usersRef.child(uid + '/lastOnline')\r\n          .onDisconnect().set(Firebase.ServerValue.TIMESTAMP)\r\n      },\r\n      setOffline: function(uid) {\r\n        usersRef.child(uid + '/online').remove()\r\n        usersRef.child(uid + '/lastOnline').set(Firebase.ServerValue.TIMESTAMP)\r\n      },\r\n      isAdmin: function(uid) {\r\n        return $firebaseObject(new Firebase(FB).child('admins').child(uid))\r\n      },\r\n      all: users\r\n    }\r\n  })\r\n\r\n  .factory('Usernames', function($firebaseObject, FB) {\r\n    return $firebaseObject(new Firebase(FB + 'usernames'))\r\n  })\r\n\r\n  .factory('Channels', function($firebaseObject, FB) {\r\n    return $firebaseObject(new Firebase(FB + 'channels'))\r\n  })\r\n\r\n  .factory('Messages', function($firebaseArray, FB) {\r\n    var msgRef = new Firebase(FB + 'messages')\r\n\r\n    return function(channel) {\r\n      return $firebaseArray(msgRef.child(channel))\r\n    }\r\n  })\r\n\r\n  .factory('Direct', function($firebaseArray, $firebaseObject, FB) {\r\n    return {\r\n      messages: function(uid1, uid2) {\r\n        var path = uid1 < uid2 ? uid1 + '/' + uid2 : uid2 + '/' + uid1\r\n        return $firebaseArray(new Firebase(FB).child('direct').child(path))\r\n      },\r\n      notify: function(from, to) {\r\n        var ref = new Firebase(FB + 'directNotification').child(to).child(from)\r\n        ref.transaction(function(val) {\r\n          return (val || 0) + 1\r\n        })\r\n      },\r\n      notifications: function(uid) {\r\n        return $firebaseObject(new Firebase(FB + 'directNotification').child(uid))\r\n      },\r\n      removeNotifications: function(to, from) {\r\n        new Firebase(FB + 'directNotification').child(to).child(from).remove()\r\n      }\r\n    }\r\n  })\r\n\r\n  .factory('Title', function($rootScope, FB) {\r\n    var Title = {\r\n      set: function(channel) {\r\n        $rootScope.title = channel + ' | Flame Slack'\r\n      },\r\n      add: function(s) {\r\n        if (!~$rootScope.title.indexOf(s))\r\n          $rootScope.title = s + $rootScope.title\r\n      },\r\n      remove: function(s) {\r\n        if (!s)\r\n          $rootScope.title = ($rootScope.title||'').replace(/[\\!\\*] /g, '')\r\n        else if (~$rootScope.title.indexOf(s))\r\n          $rootScope.title = ($rootScope.title||'').replace(s, '')\r\n      }\r\n    }\r\n\r\n    return Title\r\n  })","angular.module('FlameSlackApp')\r\n\r\n  .filter('escape', function() {\r\n    return function(text) {\r\n      return (text||'').replace(/</g, '&lt;')\r\n    }\r\n  })\r\n\r\n  .filter('code', function() {\r\n    return function(text) {\r\n      return (text||'').replace(/```([^`]+)```/g, '<pre>$1</pre>')\r\n                       .replace(/`([^`]+)`/g, '<code>$1</code>')\r\n    }\r\n  })\r\n\r\n  .filter('quote', function() {\r\n    return function(text) {\r\n      return (text||'').replace(/^>([^\\n]+)$\\n?/gm, '<blockquote>$1</blockquote>')\r\n    }\r\n  })\r\n\r\n  .filter('link', function($http) {\r\n    var linkRegExp = /(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})\\/([\\/\\w\\.\\-=?]*)*\\/?/gi\r\n    var imageRegExp = /\\.(jpg|jpeg|png|gif)/\r\n    var youtubeRegExp = /(https?:\\/\\/)(www\\.)?youtu\\.?be(\\.com)?\\/(watch\\?v=)?([\\w\\-_]+)(\\?t=)?(\\w+)?/i\r\n    var vimeoRegExp = /https?:\\/\\/vimeo\\.com\\/(\\d+)/i\r\n\r\n\r\n    return function(text, scope) {\r\n      return (text||'').replace(linkRegExp, function(link, protocol) {\r\n        var html = '<a href=\"' + (protocol ? '' : 'http://') + \r\n                    link + '\" target=\"_blank\">' + link + '</a>'\r\n\r\n        if (imageRegExp.test(link) && !scope.image) \r\n          scope.image = { src: link }\r\n\r\n        if (youtubeRegExp.test(link) && !scope.youtube) \r\n          scope.youtube = { id: link.match(youtubeRegExp)[5] }\r\n\r\n        if (vimeoRegExp.test(link) && !scope.vimeo) {\r\n          var vimeoId = link.match(vimeoRegExp)[1]\r\n          scope.vimeo = { id: vimeoId }\r\n\r\n          $http\r\n            .jsonp('https://vimeo.com/api/v2/video/' + \r\n                    vimeoId + '.json?callback=JSON_CALLBACK')\r\n            .success(function(data) {\r\n              scope.vimeo.preview = data[0].thumbnail_large\r\n            })\r\n        }\r\n\r\n        return html\r\n      })\r\n    }\r\n  })\r\n\r\n  .filter('username', function() { \r\n    return function(text, scope) {\r\n      var users = scope.users.map(function(user) {return user.username})\r\n\r\n      return (text||'').replace(/@(\\w+)/, function(match, username) {\r\n        var currentUser = scope.user.username == username\r\n\r\n        if (~users.indexOf(username)) {\r\n          if (currentUser) scope.$emmit('mention')\r\n\r\n          return '<a href=\"#/messages/' + username + '\"' +\r\n                 (currentUser ? 'class=\"mention\"' : '') +\r\n                 '>' + match + '</a>'\r\n        } else {\r\n          return match\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  .filter('channel', function() {\r\n    return function(text, scope) {\r\n      return (text||'').replace(/#(\\w+)/gi, function(match, channel) {\r\n        if (scope.channels.hasOwnProperty(channel))\r\n          return '<a href=\"#/messages/' + channel + '\">' + match + '</a>'\r\n        else\r\n          return match\r\n      })\r\n    }\r\n  })\r\n\r\n  .filter('trustAsHtml', function($sce){\r\n    return $sce.trustAsHtml\r\n  })\r\n\r\n  .filter('trustAsResourceUrl', function($sce) {\r\n    return $sce.trustAsResourceUrl\r\n  })\r\n\r\n\r\n"],"sourceRoot":"/source/"}