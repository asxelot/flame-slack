{"version":3,"sources":["app.js","directives.js","filters.js","controllers/channel.ctrl.js","controllers/direct.ctrl.js","controllers/login.ctrl.js","controllers/main.ctrl.js","controllers/messages.ctrl.js","controllers/register.ctrl.js","app.min.js","factories.js"],"names":["router","$stateProvider","$urlRouterProvider","state","url","controller","templateUrl","resolve","isLogged","Auth","$waitForAuth","usernames","Usernames","$loaded","channels","Channels","otherwise","interceptor","$httpProvider","interceptors","push","$q","$rootScope","onError","err","console","error","errors","data","reject","requestError","responseError","ngAutoscroll","link","$scope","$el","scrollToBottom","isScrolled","el","scrollTop","scrollHeight","fullscreenchange","on","angular","element","document","offsetHeight","$on","e","top","ngFocus","focus","divider","getElementById","one","$emit","offsetTop","ngTabActive","$window","Title","isTabActive","$broadcast","uniqueUsername","$attrs","ngModel","$validators","val","hasOwnProperty","require","ngEnter","css","keyCode","shiftKey","preventDefault","scope","escape","text","replace","code","quote","$http","linkRegExp","imageRegExp","youtubeRegExp","vimeoRegExp","protocol","html","test","image","src","youtube","id","match","vimeo","vimeoId","jsonp","success","preview","thumbnail_large","username","users","map","user","currentUser","indexOf","$emmit","channel","trustAsHtml","$sce","trustAsResourceUrl","ChannelCtrl","$state","Messages","params","msg","directWith","lastReaded","set","addMessage","msgForm","$invalid","timestamp","Firebase","ServerValue","TIMESTAMP","author","$id","avatar","messages","$add","remove","$remove","$watchCollection","msgs","length","$save","add","go","DirectCtrl","Direct","removeNotifications","notify","directNotify","$ref","child","log","LoginCtrl","Users","newUser","login","isLoadingHidden","$authWithPassword","then","authData","setOnline","uid","MainCtrl","$onAuth","getProfile","isAdmin","lightbox","lightboxSrc","MessagesCtrl","FB","is","all","notifications","createChannel","newChannelForm","newChannelName","isNewChannelFormShowed","logout","setOffline","$unauth","snap","key","active","RegisterCtrl","register","RegisterForm","$createUser","profile","password","profileImageURL","module","constant","config","$inject","directive","factory","$firebaseAuth","$firebaseArray","$firebaseObject","usersRef","connectedRef","connected","online","$watch","$value","onDisconnect","msgRef","uid1","uid2","path","from","to","ref","transaction","title","s","filter"],"mappings":"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","file":"app.min.js","sourcesContent":["angular.module('FlameSlackApp', [\r\n    'ui.router', \r\n    'firebase', \r\n    'ngSanitize'  \r\n  ])  \r\n  .constant('FB', 'https://flame-slack.firebaseio.com/')\r\n  .config(router)\r\n  .config(interceptor)\r\n\r\n\r\nfunction router($stateProvider, $urlRouterProvider) {\r\n  $stateProvider\r\n    .state('login', { \r\n      url: '/login',\r\n      controller: 'LoginCtrl',\r\n      templateUrl: 'views/login.html',\r\n      resolve: {\r\n        isLogged: function(Auth) {\r\n          return Auth.$waitForAuth()\r\n        }\r\n      }\r\n    })\r\n    .state('register', {\r\n      url: '/register',\r\n      controller: 'RegisterCtrl',\r\n      templateUrl: 'views/register.html',\r\n      resolve: {\r\n        usernames: function(Usernames) {\r\n          return Usernames.$loaded()\r\n        },\r\n        isLogged: function(Auth) {\r\n          return Auth.$waitForAuth()\r\n        }\r\n      }\r\n    })\r\n    .state('messages', {\r\n      controller: 'MessagesCtrl',\r\n      url: '/messages',\r\n      templateUrl: 'views/messages.html',\r\n      resolve: {\r\n        isLogged: function(Auth) {\r\n          return Auth.$waitForAuth()\r\n        },\r\n        channels: function(Channels) {\r\n          return Channels.$loaded()\r\n        }\r\n      }\r\n    })\r\n    .state('messages.user', {\r\n      url: '/@:user',\r\n      controller: 'DirectCtrl',\r\n      templateUrl: 'views/chat.html',\r\n      resolve: {\r\n        usernames: function(Usernames) { \r\n          return Usernames.$loaded()\r\n        }\r\n      }\r\n    }) \r\n    .state('messages.channel', {\r\n      url: '/:channel',\r\n      controller: 'ChannelCtrl',\r\n      templateUrl: 'views/chat.html'\r\n    })\r\n\r\n    $urlRouterProvider.otherwise(\"/messages/general\");\r\n}\r\n\r\nfunction interceptor($httpProvider) {\r\n  $httpProvider.interceptors.push(function($q, $rootScope) {\r\n    $rootScope.errors = []\r\n    \r\n    function onError(err) {\r\n      console.error(err)\r\n      $rootScope.errors.push(err.data)\r\n      return $q.reject(err)\r\n    }\r\n\r\n    return {\r\n      requestError: onError,\r\n      responseError: onError\r\n    }\r\n  })\r\n}","angular.module('FlameSlackApp')\r\n  .directive('ngAutoscroll', ngAutoscroll)\r\n  .directive('divider', divider)\r\n  .directive('ngTabActive', ngTabActive)\r\n  .directive('uniqueUsername', uniqueUsername)\r\n  .directive('ngEnter', ngEnter)\r\n  .directive('ngFocus', ngFocus)\r\n\r\n\r\nfunction ngAutoscroll() {\r\n  function link($scope, $el) {\r\n    var el = $el[0],\r\n        isScrolled = true,\r\n        fullscreenchange = 'webkitfullscreenchange mozfullscreenchange fullscreenchange'\r\n\r\n    function scrollToBottom() {\r\n      if (isScrolled) el.scrollTop = el.scrollHeight\r\n    }\r\n\r\n    $el.on('DOMSubtreeModified', scrollToBottom)\r\n\r\n    // chrome scroll fix\r\n    angular.element(document).on(fullscreenchange, scrollToBottom)\r\n\r\n    $el.on('scroll', function() {\r\n      isScrolled = el.scrollTop == el.scrollHeight - el.offsetHeight\r\n    })\r\n\r\n    $scope.$on('dividerTop', function(e, top) {\r\n      el.scrollTop = top\r\n    })\r\n  }\r\n\r\n  return {\r\n    link: link\r\n  }\r\n}\r\n\r\n\r\nfunction ngFocus() {\r\n  function link($scope, $el) {\r\n    $el[0].focus()\r\n  }\r\n\r\n  return {\r\n    link: link\r\n  }\r\n}\r\n\r\nfunction divider() {\r\n  function link($scope, $el) {\r\n    angular.element(document.getElementById('chat'))\r\n      .one('DOMSubtreeModified', function() {\r\n        $scope.$emit('dividerTop', $el[0].offsetTop - 150)\r\n      })\r\n  }\r\n\r\n  return {\r\n    link: link\r\n  }\r\n}\r\n\r\nfunction ngTabActive($window, $rootScope,  Title) {\r\n  function link() {\r\n    angular.element($window)\r\n      .on('focus', function() {\r\n        $rootScope.isTabActive = true\r\n        $rootScope.$broadcast('tab-active', true)\r\n      })\r\n      .on('blur', function() {\r\n        $rootScope.isTabActive = false\r\n        $rootScope.$broadcast('tab-active', false)\r\n      })\r\n  }\r\n\r\n  return {\r\n    link: link\r\n  }\r\n}\r\n\r\nfunction uniqueUsername() {\r\n  function link($scope, $el, $attrs, ngModel) {\r\n    ngModel.$validators.uniqueUsername = function(val) {\r\n      return !$scope.usernames.hasOwnProperty(val)\r\n    }\r\n  }\r\n\r\n  return {\r\n    require: 'ngModel',\r\n    link: link\r\n  }\r\n}\r\n\r\nfunction ngEnter() {\r\n  function link($scope, $el) {\r\n    $el.on('input', function() {\r\n      if ($el[0].offsetHeight < 170) \r\n        $el.css('height', $el[0].scrollHeight + 2 + 'px')\r\n    })\r\n\r\n    $el.on('keydown', function(e) {\r\n      if (e.keyCode == 13 && !e.shiftKey) {\r\n        $scope.ngEnter()\r\n        $el.css('height', '34px')\r\n        e.preventDefault()\r\n      }\r\n    })\r\n  }\r\n\r\n  return {\r\n    scope: {\r\n      ngEnter: '&'\r\n    },\r\n    link: link\r\n  }\r\n}","angular.module('FlameSlackApp')\r\n  .filter('escape', escape)\r\n  .filter('code', code)\r\n  .filter('quote', quote)\r\n  .filter('link', link)\r\n  .filter('username', username)\r\n  .filter('channel', channel)\r\n  .filter('trustAsHtml', trustAsHtml)\r\n  .filter('trustAsResourceUrl', trustAsResourceUrl)\r\n\r\n\r\nfunction escape() {\r\n  return function(text) {\r\n    return (text||'').replace(/</g, '&lt;')\r\n  }\r\n}\r\n\r\nfunction code() {\r\n  return function(text) {\r\n    return (text||'').replace(/```([^`]+)```/g, '<pre>$1</pre>')\r\n                     .replace(/`([^`]+)`/g, '<code>$1</code>')\r\n  }\r\n}\r\n\r\nfunction quote() {\r\n  return function(text) {\r\n    return (text||'').replace(/^>([^\\n]+)$\\n?/gm, '<blockquote>$1</blockquote>')\r\n  }\r\n}\r\n\r\nfunction link($http) {\r\n  var linkRegExp = /(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})\\/([\\/\\w\\.\\-=?]*)*\\/?/gi\r\n  var imageRegExp = /\\.(jpg|jpeg|png|gif)/\r\n  var youtubeRegExp = /(https?:\\/\\/)(www\\.)?youtu\\.?be(\\.com)?\\/(watch\\?v=)?([\\w\\-_]+)(\\?t=)?(\\w+)?/i\r\n  var vimeoRegExp = /https?:\\/\\/vimeo\\.com\\/(\\d+)/i\r\n\r\n\r\n  return function(text, scope) {\r\n    return (text||'').replace(linkRegExp, function(link, protocol) {\r\n      var html = '<a href=\"' + (protocol ? '' : 'http://') + \r\n                  link + '\" target=\"_blank\">' + link + '</a>'\r\n\r\n      if (imageRegExp.test(link) && !scope.image) \r\n        scope.image = { src: link }\r\n\r\n      if (youtubeRegExp.test(link) && !scope.youtube) \r\n        scope.youtube = { id: link.match(youtubeRegExp)[5] }\r\n\r\n      if (vimeoRegExp.test(link) && !scope.vimeo) {\r\n        var vimeoId = link.match(vimeoRegExp)[1]\r\n        scope.vimeo = { id: vimeoId }\r\n\r\n        $http.jsonp('https://vimeo.com/api/v2/video/' + vimeoId +\r\n                   '.json?callback=JSON_CALLBACK')\r\n          .success(function(data) {\r\n            scope.vimeo.preview = data[0].thumbnail_large\r\n          })\r\n      }\r\n\r\n      return html\r\n    })\r\n  }\r\n}\r\n\r\nfunction username() { \r\n  return function(text, scope) {\r\n    var users = scope.users.map(function(user) {return user.username})\r\n\r\n    return (text||'').replace(/@(\\w+)/, function(match, username) {\r\n      var currentUser = scope.user.username == username\r\n\r\n      if (~users.indexOf(username)) {\r\n        if (currentUser) scope.$emmit('mention')\r\n\r\n        return '<a href=\"#/messages/' + username + '\"' +\r\n               (currentUser ? 'class=\"mention\"' : '') +\r\n               '>' + match + '</a>'\r\n      } else {\r\n        return match\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction channel() {\r\n  return function(text, scope) {\r\n    return (text||'').replace(/#(\\w+)/gi, function(match, channel) {\r\n      if (scope.channels.hasOwnProperty(channel))\r\n        return '<a href=\"#/messages/' + channel + '\">' + match + '</a>'\r\n      else\r\n        return match\r\n    })\r\n  }\r\n}\r\n\r\nfunction trustAsHtml($sce){\r\n  return $sce.trustAsHtml\r\n}\r\n\r\nfunction trustAsResourceUrl($sce) {\r\n  return $sce.trustAsResourceUrl\r\n}\r\n\r\n\r\n","angular.module('FlameSlackApp')\r\n  .controller('ChannelCtrl', ChannelCtrl)  \r\n\r\n\r\nfunction ChannelCtrl($rootScope, $scope, $state, channels, Messages, Title) {\r\n  if (!$state.params.channel || !channels.hasOwnProperty($state.params.channel))\r\n    return $state.go('messages.channel', { channel: 'general' }) \r\n  \r\n  $scope.msg = {}\r\n  $rootScope.directWith = null\r\n  $rootScope.channel = $state.params.channel\r\n  $scope.divider = $scope.user.lastReaded && \r\n                   $scope.user.lastReaded[$scope.channel]\r\n  \r\n  Title.set($scope.channel)\r\n\r\n  $scope.addMessage = function() {\r\n    if ($scope.msgForm.$invalid) return \r\n\r\n    $scope.msg.channel = $scope.channel\r\n    $scope.msg.timestamp = Firebase.ServerValue.TIMESTAMP\r\n    $scope.msg.author = {\r\n      id: $scope.user.$id,\r\n      username: $scope.user.username,\r\n      avatar: $scope.user.avatar\r\n    }\r\n\r\n    $scope.messages[$scope.channel].$add($scope.msg)\r\n    $scope.msg = {}\r\n  }\r\n\r\n  $scope.remove = function(msg) {\r\n    $scope.messages[$scope.channel].$remove(msg)\r\n  }\r\n\r\n  // last readed messages\r\n  $scope.$watchCollection('messages.' + $scope.channel, function(msgs) {\r\n    $scope.user.lastReaded = $scope.user.lastReaded || {}\r\n    $scope.user.lastReaded[$scope.channel] = msgs.length && \r\n                                             msgs[msgs.length-1].$id\r\n    $scope.user.$save()\r\n  })\r\n\r\n  // mention\r\n  $scope.$on('mention', function() {\r\n    if (!$scope.isTabActive) Title.add('! ')\r\n  })\r\n}","angular.module('FlameSlackApp')\r\n  .controller('DirectCtrl', DirectCtrl)\r\n\r\n\r\nfunction DirectCtrl($scope, $rootScope, $state, usernames, Direct, Title) {\r\n  if (!usernames.hasOwnProperty($state.params.user))\r\n    return console.log('user not found')\r\n\r\n  $scope.msg = {}\r\n  $rootScope.channel = null\r\n  $rootScope.directWith = {\r\n    $id: usernames[$state.params.user],\r\n    username: $state.params.user\r\n  }\r\n  $scope.messages = Direct.messages($scope.user.$id, $scope.directWith.$id)\r\n\r\n  Title.set('@' + $scope.directWith.username)\r\n  Title.remove()\r\n  Direct.removeNotifications($scope.user.$id, $scope.directWith.$id)\r\n\r\n  $scope.addMessage = function() {\r\n    if ($scope.msgForm.$invalid) return \r\n\r\n    $scope.msg.timestamp = Firebase.ServerValue.TIMESTAMP\r\n    $scope.msg.author = {\r\n      id: $scope.user.$id,\r\n      username: $scope.user.username,\r\n      avatar: $scope.user.avatar\r\n    }\r\n\r\n    $scope.messages.$add($scope.msg)\r\n    Direct.notify($scope.user.$id, $scope.directWith.$id)\r\n    $scope.msg = {}\r\n  }\r\n\r\n  $scope.remove = function(msg) {\r\n    $scope.messages.$remove(msg)\r\n  }\r\n\r\n  $scope.$watchCollection('messages', function() {\r\n    $scope.directNotify.$ref().child($scope.directWith.$id).remove()\r\n  })\r\n}","angular.module('FlameSlackApp')\r\n  .controller('LoginCtrl', LoginCtrl)\r\n\r\n\r\nfunction LoginCtrl($scope, $rootScope, $state, Auth, Users, isLogged) {\r\n  $scope.newUser = {}\r\n\r\n  if (isLogged) return $state.go('messages.channel')\r\n\r\n  $scope.login = function() {\r\n    $rootScope.isLoadingHidden = false\r\n\r\n    Auth.$authWithPassword($scope.newUser)\r\n      .then(function(authData) {\r\n        Users.setOnline(authData.uid)\r\n        $state.go('messages.channel')\r\n      })\r\n      .catch(console.error)\r\n  }\r\n}\r\n","angular.module('FlameSlackApp')\r\n  .controller('MainCtrl', MainCtrl)\r\n\r\n\r\nfunction MainCtrl($scope, $rootScope, $state, Auth, Users, Usernames) {\r\n\r\n  Auth.$onAuth(function(authData) {\r\n    if (authData) {\r\n      $rootScope.user = Users.getProfile(authData.uid)\r\n      Users.setOnline(authData.uid)\r\n      $rootScope.isAdmin = Users.isAdmin(authData.uid)\r\n    } else {\r\n      $rootScope.user = null\r\n      $state.go('login')\r\n    }\r\n  }) \r\n\r\n  $scope.lightbox = function(src) {\r\n    $scope.lightboxSrc = src\r\n  }       \r\n\r\n  $scope.$on('$stateChangeSuccess', function() {\r\n    $rootScope.isLoadingHidden = true\r\n  }) \r\n}","angular.module('FlameSlackApp')\r\n  .controller('MessagesCtrl', MessagesCtrl)  \r\n \r\n \r\nfunction MessagesCtrl($scope, $state, Auth, Messages, Users,\r\n                      Title, Direct, FB,isLogged, channels) {\r\n\r\n  if (!isLogged) return $state.go('login')\r\n  if ($state.is('messages')) $state.go('messages.channel')\r\n\r\n  $scope.messages = {}\r\n  $scope.users = Users.all\r\n  $scope.channels = channels\r\n  $scope.directNotify = Direct.notifications($scope.user.$id)    \r\n\r\n  $scope.createChannel = function() {\r\n    if ($scope.newChannelForm.$invalid) return\r\n      \r\n    $scope.channels[$scope.newChannelName] = true\r\n    $scope.channels.$save()\r\n    $scope.messages[$scope.newChannelName] = Messages($scope.newChannelName)\r\n    $scope.newChannelName = ''\r\n    $scope.isNewChannelFormShowed = false\r\n  }\r\n\r\n  $scope.logout = function() {\r\n    Users.setOffline($scope.user.$id)\r\n    Auth.$unauth()\r\n  }   \r\n\r\n  // load messages\r\n  $scope.channels.$ref().on('child_added', function(snap) {\r\n    $scope.messages[snap.key()] = Messages(snap.key())\r\n  }) \r\n\r\n  // new message\r\n  new Firebase(FB + 'messages/').on('child_changed', function() {\r\n    if (!$scope.isTabActive) Title.add('* ')\r\n  }) \r\n\r\n  $scope.directNotify.$ref().on('child_added', function(snap) {\r\n    Title.add('! ')\r\n  })\r\n\r\n  $scope.$on('tab-active', function(e, active) {\r\n    if (active) Title.remove()\r\n  })  \r\n\r\n  $scope.directNotify.$ref().on('child_added', function(snap) {\r\n    Title.add('! ')\r\n  })   \r\n}","angular.module('FlameSlackApp')\r\n  .controller('RegisterCtrl', RegisterCtrl)\r\n\r\n\r\nfunction RegisterCtrl($scope, $rootScope, $state, Auth, Users, \r\n                      usernames, isLogged) {\r\n  $scope.usernames = usernames\r\n  $scope.newUser = {}\r\n  \r\n  if (isLogged) return $state.go('messages.channel')\r\n\r\n  $scope.register = function() {\r\n    if ($scope.RegisterForm.$invalid) return\r\n    if ($scope.usernames[$scope.newUser.username])\r\n      return console.log('this username already exists')\r\n\r\n    $rootScope.isLoadingHidden = false\r\n\r\n    Auth.$createUser($scope.newUser)\r\n      .then(function(authData) {\r\n        return Auth.$authWithPassword($scope.newUser)\r\n      })\r\n      .then(function(authData) {\r\n        Users.setOnline(authData.uid)\r\n        var profile = Users.getProfile(authData.uid)\r\n\r\n        $scope.usernames[$scope.newUser.username] = authData.uid\r\n        $scope.usernames.$save()\r\n        profile.username = $scope.newUser.username\r\n        profile.avatar = authData.password.profileImageURL\r\n        profile.$save()\r\n        Users.all.$save()\r\n        $state.go('messages.channel')\r\n      })\r\n  }\r\n}",null,"angular.module('FlameSlackApp')\r\n\r\n  .factory('Auth', function($firebaseAuth, FB) {\r\n    return $firebaseAuth(new Firebase(FB))\r\n  })\r\n\r\n  .factory('Users', function($firebaseArray, $firebaseObject, FB) {\r\n    var usersRef = new Firebase(FB + 'users'),\r\n        connectedRef = new Firebase(FB + '.info/connected'),\r\n        users = $firebaseArray(usersRef)\r\n\r\n    return {\r\n      getProfile: function(uid) {\r\n        return $firebaseObject(usersRef.child(uid))\r\n      },\r\n      setOnline: function(uid) {\r\n        var connected = $firebaseObject(connectedRef)\r\n            online = $firebaseArray(usersRef.child(uid + '/online'))\r\n\r\n        connected.$watch(function() {\r\n          if (connected.$value === true) {\r\n            online.$add(true).then(function() {\r\n              online.$ref().onDisconnect().remove()\r\n            })\r\n          }\r\n        })\r\n\r\n        usersRef.child(uid + '/lastOnline')\r\n          .onDisconnect().set(Firebase.ServerValue.TIMESTAMP)\r\n      },\r\n      setOffline: function(uid) {\r\n        usersRef.child(uid + '/online').remove()\r\n        usersRef.child(uid + '/lastOnline').set(Firebase.ServerValue.TIMESTAMP)\r\n      },\r\n      isAdmin: function(uid) {\r\n        return $firebaseObject(new Firebase(FB).child('admins').child(uid))\r\n      },\r\n      all: users\r\n    }\r\n  })\r\n\r\n  .factory('Usernames', function($firebaseObject, FB) {\r\n    return $firebaseObject(new Firebase(FB + 'usernames'))\r\n  })\r\n\r\n  .factory('Channels', function($firebaseObject, FB) {\r\n    return $firebaseObject(new Firebase(FB + 'channels'))\r\n  })\r\n\r\n  .factory('Messages', function($firebaseArray, FB) {\r\n    var msgRef = new Firebase(FB + 'messages')\r\n\r\n    return function(channel) {\r\n      return $firebaseArray(msgRef.child(channel))\r\n    }\r\n  })\r\n\r\n  .factory('Direct', function($firebaseArray, $firebaseObject, FB) {\r\n    return {\r\n      messages: function(uid1, uid2) {\r\n        var path = uid1 < uid2 ? uid1 + '/' + uid2 : uid2 + '/' + uid1\r\n        return $firebaseArray(new Firebase(FB).child('direct').child(path))\r\n      },\r\n      notify: function(from, to) {\r\n        var ref = new Firebase(FB + 'directNotification').child(to).child(from)\r\n        ref.transaction(function(val) {\r\n          return (val || 0) + 1\r\n        })\r\n      },\r\n      notifications: function(uid) {\r\n        return $firebaseObject(new Firebase(FB + 'directNotification').child(uid))\r\n      },\r\n      removeNotifications: function(to, from) {\r\n        new Firebase(FB + 'directNotification').child(to).child(from).remove()\r\n      }\r\n    }\r\n  })\r\n\r\n  .factory('Title', function($rootScope, FB) {\r\n    var Title = {\r\n      set: function(channel) {\r\n        $rootScope.title = channel + ' | Flame Slack'\r\n      },\r\n      add: function(s) {\r\n        if (!~$rootScope.title.indexOf(s))\r\n          $rootScope.title = s + $rootScope.title\r\n      },\r\n      remove: function(s) {\r\n        if (!s)\r\n          $rootScope.title = ($rootScope.title||'').replace(/[\\!\\*] /g, '')\r\n        else if (~$rootScope.title.indexOf(s))\r\n          $rootScope.title = ($rootScope.title||'').replace(s, '')\r\n      }\r\n    }\r\n\r\n    return Title\r\n  })"],"sourceRoot":"/source/"}