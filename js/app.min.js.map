{"version":3,"sources":["app.js","controllers/channel.ctrl.js","controllers/direct.ctrl.js","controllers/login.ctrl.js","controllers/main.ctrl.js","controllers/register.ctrl.js","app.min.js","directives.js","factories.js","filters.js"],"names":["router","$routeProvider","when","controller","templateUrl","resolve","isLogged","Auth","$waitForAuth","usernames","Usernames","$loaded","channels","Channels","ChannelCtrl","$scope","$rootScope","$routeParams","$location","Messages","Users","Title","Direct","FB","channel","hasOwnProperty","users","all","directNotify","notifications","user","$id","msg","divider","lastReaded","set","addMessage","text","timestamp","Firebase","ServerValue","TIMESTAMP","author","id","username","avatar","messages","$add","remove","$remove","createChannel","newChannelForm","$invalid","newChannelName","$save","isNewChannelFormShowed","$ref","on","snap","key","$watchCollection","msgs","length","isTabActive","add","$on","e","active","path","DirectCtrl","console","log","directWith","removeNotifications","notify","LoginCtrl","newUser","login","isLoadingHidden","$authWithPassword","then","authData","setOnline","uid","error","MainCtrl","$onAuth","getProfile","isAdmin","lightbox","src","lightboxSrc","logout","setOffline","$unauth","RegisterCtrl","register","RegisterForm","$createUser","profile","password","profileImageURL","angular","module","constant","config","$inject","directive","link","$el","scrollToBottom","isScrolled","el","scrollTop","scrollHeight","scrolledPosition","fullscreenchange","element","document","target","parentElement","offsetTop","offsetHeight","top","focus","getElementById","one","$emit","$window","$broadcast","$attrs","ngModel","$validators","uniqueUsername","val","require","css","keyCode","shiftKey","ngEnter","preventDefault","scope","factory","$firebaseAuth","$firebaseArray","$firebaseObject","usersRef","connectedRef","child","connected","online","$watch","$value","onDisconnect","msgRef","uid1","uid2","from","to","ref","transaction","title","s","indexOf","replace","filter","$http","linkRegExp","imageRegExp","youtubeRegExp","vimeoRegExp","protocol","html","test","image","youtube","match","vimeo","vimeoId","jsonp","success","data","preview","thumbnail_large","map","currentUser","$sce","trustAsHtml","trustAsResourceUrl"],"mappings":"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","file":"app.min.js","sourcesContent":["angular.module('FlameSlackApp', [\r\n    'ngRoute', \r\n    'firebase', \r\n    'ngSanitize'  \r\n  ])  \r\n\r\n  .constant('FB', 'https://flame-slack.firebaseio.com/')\r\n\r\n  .config(router)\r\n\r\nfunction router($routeProvider) {\r\n  $routeProvider\r\n    .when('/login', {\r\n      controller: 'LoginCtrl',\r\n      templateUrl: 'views/login.html',\r\n      resolve: {\r\n        isLogged: function(Auth) {\r\n          return Auth.$waitForAuth()\r\n        }\r\n      }\r\n    })\r\n    .when('/register', {\r\n      controller: 'RegisterCtrl',\r\n      templateUrl: 'views/register.html',\r\n      resolve: {\r\n        usernames: function(Usernames) {\r\n          return Usernames.$loaded()\r\n        },\r\n        isLogged: function(Auth) {\r\n          return Auth.$waitForAuth()\r\n        }\r\n      }\r\n    })\r\n    .when('/channels/:channel?', {\r\n      controller: 'ChannelCtrl',\r\n      templateUrl: 'views/chat.html',\r\n      resolve: {\r\n        channels: function(Channels) {\r\n          return Channels.$loaded()\r\n        },\r\n        isLogged: function(Auth) {\r\n          return Auth.$waitForAuth()\r\n        }\r\n      }\r\n    })\r\n    .when('/messages/:user', {\r\n      controller: 'DirectCtrl',\r\n      templateUrl: 'views/chat.html',\r\n      resolve: {\r\n        usernames: function(Usernames) {\r\n          return Usernames.$loaded()\r\n        },\r\n        isLogged: function(Auth) {\r\n          return Auth.$waitForAuth()\r\n        }\r\n      }\r\n    })\r\n}","angular.module('FlameSlackApp')\r\n  .controller('ChannelCtrl', ChannelCtrl)  \r\n\r\n\r\nfunction ChannelCtrl($scope, $rootScope, $routeParams, $location, channels, \r\n                      isLogged, Messages, Users, Title, Direct, FB) {\r\n  if (!isLogged) \r\n    return $location.path('/login')\r\n\r\n  if (!$routeParams.channel || !channels.hasOwnProperty($routeParams.channel))\r\n    return $location.path('channels/general')  \r\n\r\n  if (!$scope.channels) $rootScope.channels = channels\r\n  if (!$scope.users) $rootScope.users = Users.all\r\n  if (!$scope.directNotify) \r\n    $rootScope.directNotify = Direct.notifications($scope.user.$id)    \r\n\r\n  $scope.channel = $routeParams.channel\r\n  $scope.msg = {}\r\n  $scope.divider = $scope.user.lastReaded && \r\n                   $scope.user.lastReaded[$scope.channel]\r\n  \r\n  Title.set($scope.channel)\r\n\r\n  $scope.addMessage = function() {\r\n    if (!$scope.msg.text) return \r\n\r\n    $scope.msg.channel = $scope.channel\r\n    $scope.msg.timestamp = Firebase.ServerValue.TIMESTAMP\r\n    $scope.msg.author = {\r\n      id: $scope.user.$id,\r\n      username: $scope.user.username,\r\n      avatar: $scope.user.avatar\r\n    }\r\n\r\n    $scope.messages[$scope.channel].$add($scope.msg)\r\n    $scope.msg = {}\r\n  }\r\n\r\n  $scope.remove = function(msg) {\r\n    $scope.messages[$scope.channel].$remove(msg)\r\n  }\r\n\r\n  $scope.createChannel = function() {\r\n    if ($scope.newChannelForm.$invalid) return\r\n      \r\n    $scope.channels[$scope.newChannelName] = true\r\n    $scope.channels.$save()\r\n    $scope.messages[$scope.newChannelName] = Messages($scope.newChannelName)\r\n    $scope.newChannelName = ''\r\n    $scope.isNewChannelFormShowed = false\r\n  }\r\n\r\n  // load messages\r\n  $scope.channels.$ref().on('child_added', function(snap) {\r\n    if (!$scope.messages) $rootScope.messages = {}\r\n    $scope.messages[snap.key()] = Messages(snap.key())\r\n  }) \r\n\r\n  // last readed messages\r\n  $scope.$watchCollection('messages.' + $scope.channel, function(msgs) {\r\n    $scope.user.lastReaded = $scope.user.lastReaded || {}\r\n    $scope.user.lastReaded[$scope.channel] = msgs.length && \r\n                                             msgs[msgs.length-1].$id\r\n    $scope.user.$save()\r\n  })\r\n\r\n  // new message\r\n  new Firebase(FB + 'messages/').on('child_changed', function() {\r\n    if (!$scope.isTabActive) Title.add('* ')\r\n  })\r\n\r\n  // mention\r\n  $scope.$on('mention', function() {\r\n    if (!$scope.isTabActive) Title.add('! ')\r\n  })\r\n\r\n  $scope.$on('tab-active', function(e, active) {\r\n    if (active) Title.remove()\r\n  })\r\n}","angular.module('FlameSlackApp')\r\n  .controller('DirectCtrl', DirectCtrl)\r\n\r\n\r\nfunction DirectCtrl($scope, $rootScope, $routeParams, $location, usernames,\r\n                    isLogged, Channels, Users, Direct, FB) {\r\n  if (!isLogged) \r\n    return $location.path('/login')\r\n\r\n  if (!usernames.hasOwnProperty($routeParams.user))\r\n    console.log('user not found')\r\n\r\n  if (!$scope.users) $rootScope.users = Users.all\r\n  if (!$scope.channels) $rootScope.channels = Channels\r\n  if (!$scope.directNotify) \r\n    $rootScope.directNotify = Direct.notifications($scope.user.$id)\r\n\r\n  $scope.msg = {}\r\n  $scope.directWith = {\r\n    $id: usernames[$routeParams.user],\r\n    username: $routeParams.user\r\n  }\r\n  $scope.messages = Direct.messages($scope.user.$id, $scope.directWith.$id)\r\n\r\n  Direct.removeNotifications($scope.user.$id, $scope.directWith.$id)\r\n\r\n  $scope.addMessage = function() {\r\n    if (!$scope.msg.text) return \r\n\r\n    $scope.msg.timestamp = Firebase.ServerValue.TIMESTAMP\r\n    $scope.msg.author = {\r\n      id: $scope.user.$id,\r\n      username: $scope.user.username,\r\n      avatar: $scope.user.avatar\r\n    }\r\n\r\n    $scope.messages.$add($scope.msg)\r\n    Direct.notify($scope.user.$id, $scope.directWith.$id)\r\n    $scope.msg = {}\r\n  }\r\n}","angular.module('FlameSlackApp')\r\n  .controller('LoginCtrl', LoginCtrl)\r\n\r\n\r\nfunction LoginCtrl($scope, $rootScope, $location, Auth, Users, isLogged) {\r\n  $scope.newUser = {}\r\n\r\n  if (isLogged) return $location.path('/channels')\r\n\r\n  $scope.login = function() {\r\n    $rootScope.isLoadingHidden = false\r\n\r\n    Auth.$authWithPassword($scope.newUser)\r\n      .then(function(authData) {\r\n        Users.setOnline(authData.uid)\r\n        $location.path('/channels')\r\n      })\r\n      .catch(console.error)\r\n  }\r\n}\r\n","angular.module('FlameSlackApp')\r\n  .controller('MainCtrl', MainCtrl)\r\n\r\n\r\nfunction MainCtrl($scope, $rootScope, $location, Auth, Users, Usernames) {\r\n\r\n  Auth.$onAuth(function(authData) {\r\n    if (authData) {\r\n      $rootScope.user = Users.getProfile(authData.uid)\r\n      Users.setOnline(authData.uid)\r\n      $rootScope.isAdmin = Users.isAdmin(authData.uid)\r\n    } else {\r\n      $rootScope.user = null\r\n      $location.path('/login')\r\n    }\r\n  })  \r\n  \r\n  $scope.lightbox = function(src) {\r\n    $scope.lightboxSrc = src\r\n  }\r\n\r\n  $scope.logout = function() {\r\n    Users.setOffline($scope.user.$id)\r\n    Auth.$unauth()\r\n  }     \r\n\r\n  $scope.$on('$routeChangeSuccess', function() {\r\n    $rootScope.isLoadingHidden = true\r\n  }) \r\n}","angular.module('FlameSlackApp')\r\n  .controller('RegisterCtrl', RegisterCtrl)\r\n\r\n\r\nfunction RegisterCtrl($scope, $rootScope, $location, Auth, Users, \r\n                      usernames, isLogged) {\r\n  $scope.usernames = usernames\r\n  $scope.newUser = {}\r\n  \r\n  if (isLogged) return $location.path('/channels')\r\n\r\n  $scope.register = function() {\r\n    if ($scope.RegisterForm.$invalid) return\r\n    if ($scope.usernames[$scope.newUser.username])\r\n      return console.log('this username already exists')\r\n\r\n    $rootScope.isLoadingHidden = false\r\n\r\n    Auth.$createUser($scope.newUser)\r\n      .then(function(authData) {\r\n        return Auth.$authWithPassword($scope.newUser)\r\n      })\r\n      .then(function(authData) {\r\n        Users.setOnline(authData.uid)\r\n        var profile = Users.getProfile(authData.uid)\r\n\r\n        $scope.usernames[$scope.newUser.username] = authData.uid\r\n        $scope.usernames.$save()\r\n        profile.username = $scope.newUser.username\r\n        profile.avatar = authData.password.profileImageURL\r\n        profile.$save()\r\n        Users.all.$save()\r\n        $location.path('/channels')\r\n      })\r\n  }\r\n}","function router(e){e.when(\"/login\",{controller:\"LoginCtrl\",templateUrl:\"views/login.html\",resolve:{isLogged:[\"Auth\",function(e){return e.$waitForAuth()}]}}).when(\"/register\",{controller:\"RegisterCtrl\",templateUrl:\"views/register.html\",resolve:{usernames:[\"Usernames\",function(e){return e.$loaded()}],isLogged:[\"Auth\",function(e){return e.$waitForAuth()}]}}).when(\"/channels/:channel?\",{controller:\"ChannelCtrl\",templateUrl:\"views/chat.html\",resolve:{channels:[\"Channels\",function(e){return e.$loaded()}],isLogged:[\"Auth\",function(e){return e.$waitForAuth()}]}}).when(\"/messages/:user\",{controller:\"DirectCtrl\",templateUrl:\"views/chat.html\",resolve:{usernames:[\"Usernames\",function(e){return e.$loaded()}],isLogged:[\"Auth\",function(e){return e.$waitForAuth()}]}})}function ChannelCtrl(e,n,t,r,i,a,o,s,c,l,u){return a?t.channel&&i.hasOwnProperty(t.channel)?(e.channels||(n.channels=i),e.users||(n.users=s.all),e.directNotify||(n.directNotify=l.notifications(e.user.$id)),e.channel=t.channel,e.msg={},e.divider=e.user.lastReaded&&e.user.lastReaded[e.channel],c.set(e.channel),e.addMessage=function(){e.msg.text&&(e.msg.channel=e.channel,e.msg.timestamp=Firebase.ServerValue.TIMESTAMP,e.msg.author={id:e.user.$id,username:e.user.username,avatar:e.user.avatar},e.messages[e.channel].$add(e.msg),e.msg={})},e.remove=function(n){e.messages[e.channel].$remove(n)},e.createChannel=function(){e.newChannelForm.$invalid||(e.channels[e.newChannelName]=!0,e.channels.$save(),e.messages[e.newChannelName]=o(e.newChannelName),e.newChannelName=\"\",e.isNewChannelFormShowed=!1)},e.channels.$ref().on(\"child_added\",function(t){e.messages||(n.messages={}),e.messages[t.key()]=o(t.key())}),e.$watchCollection(\"messages.\"+e.channel,function(n){e.user.lastReaded=e.user.lastReaded||{},e.user.lastReaded[e.channel]=n.length&&n[n.length-1].$id,e.user.$save()}),new Firebase(u+\"messages/\").on(\"child_changed\",function(){e.isTabActive||c.add(\"* \")}),e.$on(\"mention\",function(){e.isTabActive||c.add(\"! \")}),void e.$on(\"tab-active\",function(e,n){n&&c.remove()})):r.path(\"channels/general\"):r.path(\"/login\")}function DirectCtrl(e,n,t,r,i,a,o,s,c,l){return a?(i.hasOwnProperty(t.user)||console.log(\"user not found\"),e.users||(n.users=s.all),e.channels||(n.channels=o),e.directNotify||(n.directNotify=c.notifications(e.user.$id)),e.msg={},e.directWith={$id:i[t.user],username:t.user},e.messages=c.messages(e.user.$id,e.directWith.$id),c.removeNotifications(e.user.$id,e.directWith.$id),void(e.addMessage=function(){e.msg.text&&(e.msg.timestamp=Firebase.ServerValue.TIMESTAMP,e.msg.author={id:e.user.$id,username:e.user.username,avatar:e.user.avatar},e.messages.$add(e.msg),c.notify(e.user.$id,e.directWith.$id),e.msg={})})):r.path(\"/login\")}function LoginCtrl(e,n,t,r,i,a){return e.newUser={},a?t.path(\"/channels\"):void(e.login=function(){n.isLoadingHidden=!1,r.$authWithPassword(e.newUser).then(function(e){i.setOnline(e.uid),t.path(\"/channels\")})[\"catch\"](console.error)})}function MainCtrl(e,n,t,r,i,a){r.$onAuth(function(e){e?(n.user=i.getProfile(e.uid),i.setOnline(e.uid),n.isAdmin=i.isAdmin(e.uid)):(n.user=null,t.path(\"/login\"))}),e.lightbox=function(n){e.lightboxSrc=n},e.logout=function(){i.setOffline(e.user.$id),r.$unauth()},e.$on(\"$routeChangeSuccess\",function(){n.isLoadingHidden=!0})}function RegisterCtrl(e,n,t,r,i,a,o){return e.usernames=a,e.newUser={},o?t.path(\"/channels\"):void(e.register=function(){if(!e.RegisterForm.$invalid){if(e.usernames[e.newUser.username])return console.log(\"this username already exists\");n.isLoadingHidden=!1,r.$createUser(e.newUser).then(function(n){return r.$authWithPassword(e.newUser)}).then(function(n){i.setOnline(n.uid);var r=i.getProfile(n.uid);e.usernames[e.newUser.username]=n.uid,e.usernames.$save(),r.username=e.newUser.username,r.avatar=n.password.profileImageURL,r.$save(),i.all.$save(),t.path(\"/channels\")})}})}angular.module(\"FlameSlackApp\",[\"ngRoute\",\"firebase\",\"ngSanitize\"]).constant(\"FB\",\"https://flame-slack.firebaseio.com/\").config(router),router.$inject=[\"$routeProvider\"],angular.module(\"FlameSlackApp\").directive(\"ngAutoscroll\",function(){function e(e,n){function t(){i&&(r.scrollTop=r.scrollHeight)}var r=n[0],i=!0,a=0,o=\"webkitfullscreenchange mozfullscreenchange fullscreenchange\";n.on(\"DOMSubtreeModified\",t),angular.element(document).on(o,function(e){e.target!=document?a=e.target.parentElement.offsetTop:a&&(r.scrollTop=a)}),n.on(\"scroll\",function(){i=r.scrollTop==r.scrollHeight-r.offsetHeight}),e.$on(\"dividerTop\",function(e,n){r.scrollTop=n})}return{link:e}}).directive(\"ngFocus\",function(){function e(e,n){n[0].focus()}return{link:e}}).directive(\"divider\",function(){function e(e,n){angular.element(document.getElementById(\"chat\")).one(\"DOMSubtreeModified\",function(){e.$emit(\"dividerTop\",n[0].offsetTop-150)})}return{link:e}}).directive(\"ngTabActive\",[\"$window\",\"$rootScope\",\"Title\",function(e,n,t){function r(){angular.element(e).on(\"focus\",function(){n.isTabActive=!0,n.$broadcast(\"tab-active\",!0)}).on(\"blur\",function(){n.isTabActive=!1,n.$broadcast(\"tab-active\",!1)})}return{link:r}}]).directive(\"uniqueUsername\",function(){function e(e,n,t,r){r.$validators.uniqueUsername=function(n){return!e.usernames.hasOwnProperty(n)}}return{require:\"ngModel\",link:e}}).directive(\"ngEnter\",function(){function e(e,n){n.on(\"input\",function(){n.css(\"height\",n[0].scrollHeight+2+\"px\")}),n.on(\"keydown\",function(t){13!=t.keyCode||t.shiftKey||(e.ngEnter(),n.css(\"height\",\"34px\"),t.preventDefault())})}return{scope:{ngEnter:\"&\"},link:e}}),angular.module(\"FlameSlackApp\").factory(\"Auth\",[\"$firebaseAuth\",\"FB\",function(e,n){return e(new Firebase(n))}]).factory(\"Users\",[\"$firebaseArray\",\"$firebaseObject\",\"FB\",function(e,n,t){var r=new Firebase(t+\"users\"),i=new Firebase(t+\".info/connected\"),a=e(r);return{getProfile:function(e){return n(r.child(e))},setOnline:function(t){var a=n(i);online=e(r.child(t+\"/online\")),a.$watch(function(){a.$value===!0&&online.$add(!0).then(function(){online.$ref().onDisconnect().remove()})}),r.child(t+\"/lastOnline\").onDisconnect().set(Firebase.ServerValue.TIMESTAMP)},setOffline:function(e){r.child(e+\"/online\").remove(),r.child(e+\"/lastOnline\").set(Firebase.ServerValue.TIMESTAMP)},isAdmin:function(e){return n(new Firebase(t).child(\"admins\").child(e))},all:a}}]).factory(\"Usernames\",[\"$firebaseObject\",\"FB\",function(e,n){return e(new Firebase(n+\"usernames\"))}]).factory(\"Channels\",[\"$firebaseObject\",\"FB\",function(e,n){return e(new Firebase(n+\"channels\"))}]).factory(\"Messages\",[\"$firebaseArray\",\"FB\",function(e,n){var t=new Firebase(n+\"messages\");return function(n){return e(t.child(n))}}]).factory(\"Direct\",[\"$firebaseArray\",\"$firebaseObject\",\"FB\",function(e,n,t){return{messages:function(n,r){var i=r>n?n+\"/\"+r:r+\"/\"+n;return e(new Firebase(t).child(\"direct\").child(i))},notify:function(e,n){var r=new Firebase(t+\"directNotification\").child(n).child(e);r.transaction(function(e){return(e||0)+1})},notifications:function(e){return n(new Firebase(t+\"directNotification\").child(e))},removeNotifications:function(e,n){new Firebase(t+\"directNotification\").child(e).child(n).remove()}}}]).factory(\"Title\",[\"$rootScope\",\"FB\",function(e,n){var t={set:function(n){e.title=n+\" | Flame Slack\"},add:function(n){~e.title.indexOf(n)||(e.title=n+e.title)},remove:function(n){n?~e.title.indexOf(n)&&(e.title=e.title.replace(n,\"\")):e.title=e.title.replace(/[\\!\\*] /g,\"\")}};return t}]),angular.module(\"FlameSlackApp\").filter(\"escape\",function(){var e={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"};return function(n){return(n||\"\").replace(/[&<>\"']/g,function(n){return e[n]})}}).filter(\"code\",function(){return function(e){return(e||\"\").replace(/```([^`]+)```/g,\"<pre>$1</pre>\").replace(/`([^`]+)`/g,\"<code>$1</code>\")}}).filter(\"quote\",function(){return function(e){return(e||\"\").replace(/^>([^\\n]+)$\\n?/gm,\"<blockquote>$1</blockquote>\")}}).filter(\"link\",[\"$http\",function(e){var n=/(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})\\/([\\/\\w\\.\\-=?]*)*\\/?/gi,t=/\\.(jpg|jpeg|png|gif)/,r=/(https?:\\/\\/)(www\\.)?youtu\\.?be(\\.com)?\\/(watch\\?v=)?([\\w\\-_]+)(\\?t=)?(\\w+)?/i,i=/https?:\\/\\/vimeo\\.com\\/(\\d+)/i;return function(a,o){return(a||\"\").replace(n,function(n,a){var s='<a href=\"'+(a?\"\":\"http://\")+n+'\" target=\"_blank\">'+n+\"</a>\";if(t.test(n)&&!o.image&&(o.image={src:n}),r.test(n)&&!o.youtube&&(o.youtube={id:n.match(r)[5]}),i.test(n)&&!o.vimeo){var c=n.match(i)[1];o.vimeo={id:c},e.jsonp(\"https://vimeo.com/api/v2/video/\"+c+\".json?callback=JSON_CALLBACK\").success(function(e){o.vimeo.preview=e[0].thumbnail_large})}return s})}}]).filter(\"username\",[\"$rootScope\",function(e){return function(n){var t=e.users.map(function(e){return e.username});return(n||\"\").replace(/@(\\w+)/,function(n,r){var i=e.user.username==r;return~t.indexOf(r)?(i&&e.$broadcast(\"mention\"),'<a href=\"#/user/'+r+'\"'+(i?'class=\"mention\"':\"\")+\">\"+n+\"</a>\"):n})}}]).filter(\"channel\",[\"$rootScope\",function(e){return function(n){return(n||\"\").replace(/#(\\w+)/gi,function(n,t){return e.channels.hasOwnProperty(t)?'<a href=\"#/channels/'+t+'\">'+n+\"</a>\":n})}}]).filter(\"trustAsHtml\",[\"$sce\",function(e){return e.trustAsHtml}]).filter(\"trustAsResourceUrl\",[\"$sce\",function(e){return e.trustAsResourceUrl}]),angular.module(\"FlameSlackApp\").controller(\"ChannelCtrl\",ChannelCtrl),ChannelCtrl.$inject=[\"$scope\",\"$rootScope\",\"$routeParams\",\"$location\",\"channels\",\"isLogged\",\"Messages\",\"Users\",\"Title\",\"Direct\",\"FB\"],angular.module(\"FlameSlackApp\").controller(\"DirectCtrl\",DirectCtrl),DirectCtrl.$inject=[\"$scope\",\"$rootScope\",\"$routeParams\",\"$location\",\"usernames\",\"isLogged\",\"Channels\",\"Users\",\"Direct\",\"FB\"],angular.module(\"FlameSlackApp\").controller(\"LoginCtrl\",LoginCtrl),LoginCtrl.$inject=[\"$scope\",\"$rootScope\",\"$location\",\"Auth\",\"Users\",\"isLogged\"],angular.module(\"FlameSlackApp\").controller(\"MainCtrl\",MainCtrl),MainCtrl.$inject=[\"$scope\",\"$rootScope\",\"$location\",\"Auth\",\"Users\",\"Usernames\"],angular.module(\"FlameSlackApp\").controller(\"RegisterCtrl\",RegisterCtrl),RegisterCtrl.$inject=[\"$scope\",\"$rootScope\",\"$location\",\"Auth\",\"Users\",\"usernames\",\"isLogged\"];\n//# sourceMappingURL=app.min.js.map\n","angular.module('FlameSlackApp')\r\n\r\n  .directive('ngAutoscroll', function() {\r\n    function link($scope, $el) {\r\n      var el = $el[0],\r\n          isScrolled = true,\r\n          scrolledPosition = 0,\r\n          fullscreenchange = 'webkitfullscreenchange mozfullscreenchange fullscreenchange'\r\n\r\n      function scrollToBottom() {\r\n        if (isScrolled) el.scrollTop = el.scrollHeight\r\n      }\r\n\r\n      $el.on('DOMSubtreeModified', scrollToBottom)\r\n\r\n      // chrome scroll fix\r\n      angular.element(document).on(fullscreenchange, function(e) {\r\n        if (e.target != document) {\r\n          scrolledPosition = e.target.parentElement.offsetTop\r\n        } else if (scrolledPosition) {\r\n          el.scrollTop = scrolledPosition\r\n        }\r\n      })\r\n\r\n      $el.on('scroll', function() {\r\n        isScrolled = el.scrollTop == el.scrollHeight - el.offsetHeight\r\n      })\r\n\r\n      $scope.$on('dividerTop', function(e, top) {\r\n        el.scrollTop = top\r\n      })\r\n    }\r\n\r\n    return {\r\n      link: link\r\n    }\r\n  })\r\n\r\n  .directive('ngFocus', function() {\r\n    function link($scope, $el) {\r\n      $el[0].focus()\r\n    }\r\n\r\n    return {\r\n      link: link\r\n    }\r\n  })\r\n\r\n  .directive('divider', function() {\r\n    function link($scope, $el) {\r\n      angular.element(document.getElementById('chat'))\r\n        .one('DOMSubtreeModified', function() {\r\n          $scope.$emit('dividerTop', $el[0].offsetTop - 150)\r\n        })\r\n    }\r\n\r\n    return {\r\n      link: link\r\n    }\r\n  })\r\n\r\n  .directive('ngTabActive', function($window, $rootScope,  Title) {\r\n    function link() {\r\n      angular.element($window)\r\n        .on('focus', function() {\r\n          $rootScope.isTabActive = true\r\n          $rootScope.$broadcast('tab-active', true)\r\n        })\r\n        .on('blur', function() {\r\n          $rootScope.isTabActive = false\r\n          $rootScope.$broadcast('tab-active', false)\r\n        })\r\n    }\r\n\r\n    return {\r\n      link: link\r\n    }\r\n  })\r\n\r\n  .directive('uniqueUsername', function() {\r\n    function link($scope, $el, $attrs, ngModel) {\r\n      ngModel.$validators.uniqueUsername = function(val) {\r\n        return !$scope.usernames.hasOwnProperty(val)\r\n      }\r\n    }\r\n\r\n    return {\r\n      require: 'ngModel',\r\n      link: link\r\n    }\r\n  })\r\n\r\n  .directive('ngEnter', function() {\r\n    function link($scope, $el) {\r\n      $el.on('input', function() {\r\n        $el.css('height', $el[0].scrollHeight + 2 + 'px')\r\n      })\r\n\r\n      $el.on('keydown', function(e) {\r\n        if (e.keyCode == 13 && !e.shiftKey) {\r\n          $scope.ngEnter()\r\n          $el.css('height', '34px')\r\n          e.preventDefault()\r\n        }\r\n      })\r\n    }\r\n\r\n    return {\r\n      scope: {\r\n        ngEnter: '&'\r\n      },\r\n      link: link\r\n    }\r\n  })","angular.module('FlameSlackApp')\r\n\r\n  .factory('Auth', function($firebaseAuth, FB) {\r\n    return $firebaseAuth(new Firebase(FB))\r\n  })\r\n\r\n  .factory('Users', function($firebaseArray, $firebaseObject, FB) {\r\n    var usersRef = new Firebase(FB + 'users'),\r\n        connectedRef = new Firebase(FB + '.info/connected'),\r\n        users = $firebaseArray(usersRef)\r\n\r\n    return {\r\n      getProfile: function(uid) {\r\n        return $firebaseObject(usersRef.child(uid))\r\n      },\r\n      setOnline: function(uid) {\r\n        var connected = $firebaseObject(connectedRef)\r\n            online = $firebaseArray(usersRef.child(uid + '/online'))\r\n\r\n        connected.$watch(function() {\r\n          if (connected.$value === true) {\r\n            online.$add(true).then(function() {\r\n              online.$ref().onDisconnect().remove()\r\n            })\r\n          }\r\n        })\r\n\r\n        usersRef.child(uid + '/lastOnline')\r\n          .onDisconnect().set(Firebase.ServerValue.TIMESTAMP)\r\n      },\r\n      setOffline: function(uid) {\r\n        usersRef.child(uid + '/online').remove()\r\n        usersRef.child(uid + '/lastOnline').set(Firebase.ServerValue.TIMESTAMP)\r\n      },\r\n      isAdmin: function(uid) {\r\n        return $firebaseObject(new Firebase(FB).child('admins').child(uid))\r\n      },\r\n      all: users\r\n    }\r\n  })\r\n\r\n  .factory('Usernames', function($firebaseObject, FB) {\r\n    return $firebaseObject(new Firebase(FB + 'usernames'))\r\n  })\r\n\r\n  .factory('Channels', function($firebaseObject, FB) {\r\n    return $firebaseObject(new Firebase(FB + 'channels'))\r\n  })\r\n\r\n  .factory('Messages', function($firebaseArray, FB) {\r\n    var msgRef = new Firebase(FB + 'messages')\r\n\r\n    return function(channel) {\r\n      return $firebaseArray(msgRef.child(channel))\r\n    }\r\n  })\r\n\r\n  .factory('Direct', function($firebaseArray, $firebaseObject, FB) {\r\n    return {\r\n      messages: function(uid1, uid2) {\r\n        var path = uid1 < uid2 ? uid1 + '/' + uid2 : uid2 + '/' + uid1\r\n        return $firebaseArray(new Firebase(FB).child('direct').child(path))\r\n      },\r\n      notify: function(from, to) {\r\n        var ref = new Firebase(FB + 'directNotification').child(to).child(from)\r\n        ref.transaction(function(val) {\r\n          return (val || 0) + 1\r\n        })\r\n      },\r\n      notifications: function(uid) {\r\n        return $firebaseObject(new Firebase(FB + 'directNotification').child(uid))\r\n      },\r\n      removeNotifications: function(to, from) {\r\n        new Firebase(FB + 'directNotification').child(to).child(from).remove()\r\n      }\r\n    }\r\n  })\r\n\r\n  .factory('Title', function($rootScope, FB) {\r\n    var Title = {\r\n      set: function(channel) {\r\n        $rootScope.title = channel + ' | Flame Slack'\r\n      },\r\n      add: function(s) {\r\n        if (!~$rootScope.title.indexOf(s))\r\n          $rootScope.title = s + $rootScope.title\r\n      },\r\n      remove: function(s) {\r\n        if (!s)\r\n          $rootScope.title = $rootScope.title.replace(/[\\!\\*] /g, '')\r\n        else if (~$rootScope.title.indexOf(s))\r\n          $rootScope.title = $rootScope.title.replace(s, '')\r\n      }\r\n    }\r\n\r\n    return Title\r\n  })","angular.module('FlameSlackApp')\r\n\r\n  .filter('escape', function() {\r\n    return function(text) {\r\n      return (text||'').replace(/</g, '&lt;')\r\n    }\r\n  })\r\n\r\n  .filter('code', function() {\r\n    return function(text) {\r\n      return (text||'').replace(/```([^`]+)```/g, '<pre>$1</pre>')\r\n                       .replace(/`([^`]+)`/g, '<code>$1</code>')\r\n    }\r\n  })\r\n\r\n  .filter('quote', function() {\r\n    return function(text) {\r\n      return (text||'').replace(/^>([^\\n]+)$\\n?/gm, '<blockquote>$1</blockquote>')\r\n    }\r\n  })\r\n\r\n  .filter('link', function($http) {\r\n    var linkRegExp = /(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})\\/([\\/\\w\\.\\-=?]*)*\\/?/gi\r\n    var imageRegExp = /\\.(jpg|jpeg|png|gif)/\r\n    var youtubeRegExp = /(https?:\\/\\/)(www\\.)?youtu\\.?be(\\.com)?\\/(watch\\?v=)?([\\w\\-_]+)(\\?t=)?(\\w+)?/i\r\n    var vimeoRegExp = /https?:\\/\\/vimeo\\.com\\/(\\d+)/i\r\n\r\n\r\n    return function(text, scope) {\r\n      return (text||'').replace(linkRegExp, function(link, protocol) {\r\n        var html = '<a href=\"' + (protocol ? '' : 'http://') + \r\n                    link + '\" target=\"_blank\">' + link + '</a>'\r\n\r\n        if (imageRegExp.test(link) && !scope.image) \r\n          scope.image = { src: link }\r\n\r\n        if (youtubeRegExp.test(link) && !scope.youtube) \r\n          scope.youtube = { id: link.match(youtubeRegExp)[5] }\r\n\r\n        if (vimeoRegExp.test(link) && !scope.vimeo) {\r\n          var vimeoId = link.match(vimeoRegExp)[1]\r\n          scope.vimeo = { id: vimeoId }\r\n\r\n          $http\r\n            .jsonp('https://vimeo.com/api/v2/video/' + \r\n                    vimeoId + '.json?callback=JSON_CALLBACK')\r\n            .success(function(data) {\r\n              scope.vimeo.preview = data[0].thumbnail_large\r\n            })\r\n        }\r\n\r\n        return html\r\n      })\r\n    }\r\n  })\r\n\r\n  .filter('username', function($rootScope) {\r\n    return function(text) {\r\n      var users = $rootScope.users.map(function(user) {return user.username})\r\n\r\n      return (text||'').replace(/@(\\w+)/, function(match, username) {\r\n        var currentUser = $rootScope.user.username == username\r\n\r\n        if (~users.indexOf(username)) {\r\n          if (currentUser) $rootScope.$broadcast('mention')\r\n\r\n          return '<a href=\"#/user/' + username + '\"' +\r\n                 (currentUser ? 'class=\"mention\"' : '') +\r\n                 '>' + match + '</a>'\r\n        } else {\r\n          return match\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  .filter('channel', function($rootScope) {\r\n    return function(text) {\r\n      return (text||'').replace(/#(\\w+)/gi, function(match, channel) {\r\n        if ($rootScope.channels.hasOwnProperty(channel))\r\n          return '<a href=\"#/channels/' + channel + '\">' + match + '</a>'\r\n        else\r\n          return match\r\n      })\r\n    }\r\n  })\r\n\r\n  .filter('trustAsHtml', function($sce){\r\n    return $sce.trustAsHtml\r\n  })\r\n\r\n  .filter('trustAsResourceUrl', function($sce) {\r\n    return $sce.trustAsResourceUrl\r\n  })\r\n\r\n\r\n"],"sourceRoot":"/source/"}